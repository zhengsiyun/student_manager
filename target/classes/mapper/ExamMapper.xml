<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zsy.mapper.ExamMapper">
  <resultMap id="BaseResultMap" type="com.zsy.domain.Exam">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="time" jdbcType="DATE" property="time" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="gradeid" jdbcType="INTEGER" property="gradeid" />
    <result column="clazzid" jdbcType="INTEGER" property="clazzid" />
    <result column="courseid" jdbcType="INTEGER" property="courseid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, time, remark, type, gradeid, clazzid, courseid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from exam
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from exam
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zsy.domain.Exam">
    insert into exam (id, name, time, 
      remark, type, gradeid, 
      clazzid, courseid)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{time,jdbcType=DATE}, 
      #{remark,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, #{gradeid,jdbcType=INTEGER}, 
      #{clazzid,jdbcType=INTEGER}, #{courseid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zsy.domain.Exam">
    insert into exam
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="gradeid != null">
        gradeid,
      </if>
      <if test="clazzid != null">
        clazzid,
      </if>
      <if test="courseid != null">
        courseid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=DATE},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="gradeid != null">
        #{gradeid,jdbcType=INTEGER},
      </if>
      <if test="clazzid != null">
        #{clazzid,jdbcType=INTEGER},
      </if>
      <if test="courseid != null">
        #{courseid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zsy.domain.Exam">
    update exam
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=DATE},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="gradeid != null">
        gradeid = #{gradeid,jdbcType=INTEGER},
      </if>
      <if test="clazzid != null">
        clazzid = #{clazzid,jdbcType=INTEGER},
      </if>
      <if test="courseid != null">
        courseid = #{courseid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zsy.domain.Exam">
    update exam
    set name = #{name,jdbcType=VARCHAR},
      time = #{time,jdbcType=DATE},
      remark = #{remark,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      gradeid = #{gradeid,jdbcType=INTEGER},
      clazzid = #{clazzid,jdbcType=INTEGER},
      courseid = #{courseid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  	<!-- 查询所有考试成绩 -->
   <select id="queryAllExam"  resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from exam <!-- where gradeid=#{id} -->
     <where>
    	<if test="gradeid!=null">
    		and gradeid = #{gradeid}
    	</if>
    	<if test="clazzid!=null">
    		and clazzid = #{clazzid}
    	</if>
  	 </where>
  </select>
  
  
  <delete id="deleteByGradeId" parameterType="java.lang.Integer">
    delete from exam
    where gradeid = #{id,jdbcType=INTEGER}
  </delete>
</mapper>