<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zsy.mapper.EscoreMapper">
  <resultMap id="BaseResultMap" type="com.zsy.domain.Escore">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="examid" jdbcType="INTEGER" property="examid" />
    <result column="clazzid" jdbcType="INTEGER" property="clazzid" />
    <result column="studentid" jdbcType="INTEGER" property="studentid" />
    <result column="gradeid" jdbcType="INTEGER" property="gradeid" />
    <result column="courseid" jdbcType="INTEGER" property="courseid" />
    <result column="score" jdbcType="INTEGER" property="score" />
  </resultMap>
  <sql id="Base_Column_List">
    id, examid, clazzid, studentid, gradeid, courseid, score
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from escore
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from escore
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zsy.domain.Escore">
    insert into escore (id, examid, clazzid, 
      studentid, gradeid, courseid, 
      score)
    values (#{id,jdbcType=INTEGER}, #{examid,jdbcType=INTEGER}, #{clazzid,jdbcType=INTEGER}, 
      #{studentid,jdbcType=INTEGER}, #{gradeid,jdbcType=INTEGER}, #{courseid,jdbcType=INTEGER}, 
      #{score,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zsy.domain.Escore">
    insert into escore
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="examid != null">
        examid,
      </if>
      <if test="clazzid != null">
        clazzid,
      </if>
      <if test="studentid != null">
        studentid,
      </if>
      <if test="gradeid != null">
        gradeid,
      </if>
      <if test="courseid != null">
        courseid,
      </if>
      <if test="score != null">
        score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="examid != null">
        #{examid,jdbcType=INTEGER},
      </if>
      <if test="clazzid != null">
        #{clazzid,jdbcType=INTEGER},
      </if>
      <if test="studentid != null">
        #{studentid,jdbcType=INTEGER},
      </if>
      <if test="gradeid != null">
        #{gradeid,jdbcType=INTEGER},
      </if>
      <if test="courseid != null">
        #{courseid,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zsy.domain.Escore">
    update escore
    <set>
      <if test="examid != null">
        examid = #{examid,jdbcType=INTEGER},
      </if>
      <if test="clazzid != null">
        clazzid = #{clazzid,jdbcType=INTEGER},
      </if>
      <if test="studentid != null">
        studentid = #{studentid,jdbcType=INTEGER},
      </if>
      <if test="gradeid != null">
        gradeid = #{gradeid,jdbcType=INTEGER},
      </if>
      <if test="courseid != null">
        courseid = #{courseid,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zsy.domain.Escore">
    update escore
    set examid = #{examid,jdbcType=INTEGER},
      clazzid = #{clazzid,jdbcType=INTEGER},
      studentid = #{studentid,jdbcType=INTEGER},
      gradeid = #{gradeid,jdbcType=INTEGER},
      courseid = #{courseid,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  <!-- 根据学生的集合删除学生的成绩信息 -->
  <delete id="deleteByStudentId" >
    delete from escore
    where studentid = #{studentid}
  </delete>
  
   <delete id="deleteByGradeId" parameterType="java.lang.Integer">
    delete from escore
    where gradeid = #{id,jdbcType=INTEGER}
  </delete>
</mapper>